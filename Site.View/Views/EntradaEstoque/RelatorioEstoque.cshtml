@using System.Web.Mvc.Html
@using Microsoft.Ajax.Utilities
@using Site.DTO
@using Site.Entidade
@using Site.Enums
@using Site.Repositorio
@model Site.DTO.DTORelatorioEstoque

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.TecidoAviamentoEstoque)
    
    <div style="width: 940px;padding-right: 15px; padding-left: 15px; margin-right: auto; margin-left: 10px; ">

        @{
            var mensagem = TempData["Mensagem"] as DTOMensagem;

            if (mensagem != null )
            {
                if (mensagem.TipoMensagem == TipoMensagem.Sucesso)
                {
                    <div class="alert alert-success">
                        <h4>
                            @mensagem.Mensagem
                        </h4>
                    </div>
                }
                else if (mensagem.TipoMensagem == TipoMensagem.Alerta)
                {
                    <div class="alert">
                        <h4>
                            @mensagem.Mensagem
                        </h4>
                    </div>
                }
            }

            var matP = string.Empty;
            var tec = string.Empty;
            var cor = string.Empty;
            var codigo = string.Empty;
            var qtde = "hidden";
            var valor = "hidden";
            var nota = "hidden";
            var obs = "hidden";
            var facc = string.Empty;
            var data = string.Empty;

            var labelType = string.Empty;
            var labelButton = string.Empty;
    
            if (Model.TecidoAviamentoEstoque == 'T')
            {
                matP = "hidden";
                <legend>Relatório Estoque Tecido</legend>
            }
            else if (Model.TecidoAviamentoEstoque == 'A')
            {
                tec = "hidden";
                cor = "hidden";
                codigo = "hidden";
                <legend>Relatório Estoque Aviamentos</legend>
            }

                labelType = "success";
                labelButton = "Buscar";
        }

        <table>
            <tbody>
                <tr>
                    <td class="@data">
                        <span class="label label-@labelType">Data Início</span>
                    </td>  
                    <td class="@data">
                        <span class="label label-@labelType">Data Fim</span>
                    </td>                                       
                    <td class="@matP">
                        <span class="label label-@labelType">Aviamento</span>
                    </td>
                    <td class="@tec">
                        <span class="label label-@labelType">Tecido</span>
                    </td>
                    <td class="@cor">
                        <span class="label label-@labelType">Cor</span>
                    </td>
                    <td class="@codigo">
                        <span class="label label-@labelType">Código</span>
                    </td>
                    <td>
                        <span class="label label-@labelType">Estoque</span>
                    </td>
                    <td class="@qtde">
                        <span class="label label-@labelType">Quantidade</span>
                    </td>
                    <td class="@valor">
                        <span class="label label-@labelType">Valor</span>
                    </td>
                    <td class="@nota">
                        <span class="label label-@labelType">Nº Nota</span>
                    </td>
                    <td class="@obs">
                        <span class="label label-@labelType">Obs</span>
                    </td>
                    <td class="@facc faccaoRelatorio">
                        <span class="label label-@labelType">Facção</span>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td class="@data">
                        <div class="editor-field">
                            <input class="input-medium" id="DataInicio" name="DataInicio" type="date" value="@Model.DataInicio.ToString("yyyy-MM-dd")">
                        </div>
                    </td>  
                    <td class="@data">
                        <div class="editor-field">
                            <input class="input-medium" id="DataFim" name="DataFim" type="date" value="@Model.DataFim.ToString("yyyy-MM-dd")">
                        </div>
                    </td>                    
                    <td class="@matP">
                        <div class="controls">
                            @{
                                var matPrima = new List<SelectListItem> { new SelectListItem { Text = string.Empty, Value = string.Empty } };
                                matPrima.AddRange(new SelectList(Model.MateriasPrimarDropDown.DistinctBy(x => x.Id).OrderBy(y => y.Descricao), "Id", "Descricao"));
                                @Html.DropDownListFor(m => m.MateriaPrimaId, new SelectList(matPrima, "Value", "Text"), new { @class = "input-medium", @style = "text-transform: uppercase" })
                            }
                        </div>
                    </td>
                    <td class="@tec">
                        <div class="controls">
                            @{
                                var tecidos = new List<SelectListItem> { new SelectListItem { Text = string.Empty, Value = string.Empty } };
                                tecidos.AddRange(new SelectList(Model.TecidosDropDown.DistinctBy(x => x.IdTecido).OrderBy(y => y.TipoTecido), "IdTecido", "TipoTecido"));
                                @Html.DropDownListFor(m => m.IdTecido, new SelectList(tecidos, "Value", "Text"), new { @class = "input-medium", @style = "text-transform: uppercase" })
                            }
                        </div>
                    </td>
                    <td class="@cor">
                        <div class="controls">
                            @{
                                var cores = new List<SelectListItem> { new SelectListItem { Text = string.Empty, Value = string.Empty } };
                                cores.AddRange(new SelectList(Model.TecidosDropDown.DistinctBy(x => x.IdCor).OrderBy(y => y.Cor), "IdCor", "Cor"));
                                @Html.DropDownListFor(m => m.CorId, new SelectList(cores, "Value", "Text"), new { @class = "input-medium", @style = "text-transform: uppercase" })
                            }
                        </div>
                    </td>
                    <td class="@codigo">
                        <div class="controls">
                            @{
                                var codigos = new List<SelectListItem> { new SelectListItem { Text = string.Empty, Value = string.Empty } };
                                codigos.AddRange(new SelectList(Model.TecidosDropDown.DistinctBy(x => x.IdCodigo).OrderBy(y => y.Codigo), "IdCodigo", "Codigo"));
                                @Html.DropDownListFor(m => m.CodigoId, new SelectList(codigos, "Value", "Text"), new { @class = "input-medium", @style = "text-transform: uppercase" })
                            }
                        </div>
                    </td>
                    <td>
                        <div class="controls">
                            @{
                                var estoqueEntradaSaida = new List<SelectListItem> { new SelectListItem { Text = string.Empty, Value = "T" }, new SelectListItem { Text = "Segura", Value = "E" }, new SelectListItem { Text = "Facção", Value = "S" } };
                                @Html.DropDownListFor(m => m.EntradaSaidaEstoque, new SelectList(estoqueEntradaSaida, "Value", "Text"), new { @id = "EntradaSaidaRelatorio", @class = "input-medium", @style = "text-transform: uppercase" })
                            }
                        </div>
                    </td>
                    <td class="@qtde">
                        <div class="editor-field">
                            <input class="input-mini" id="Quantidade" name="Quantidade" type="number" value="@Model.Quantidade">
                        </div>
                    </td>
                    <td class="@valor">
                        <div class="editor-field">
                            <input class="input-mini" id="Valor" name="Valor" type="text" value="@Model.Valor">
                        </div>
                    </td>
                    <td class="@nota">
                        <div class="editor-field">
                            <input class="input-small" id="NumeroNota" name="NumeroNota" type="text" value="@Model.NumeroNota">
                        </div>
                    </td>
                    <td class="@obs">
                        <div class="editor-field">
                            <input class="input-medium" id="Obs" name="Obs" type="text" value="@Model.Obs">
                        </div>
                    </td>
                    <td class="@facc">
                        <div class="controls">
                            @{
                                var faccoes = new List<SelectListItem> { new SelectListItem { Text = "", Value = string.Empty } };
                                faccoes.AddRange(new SelectList(Model.FaccoesDropDown.DistinctBy(x => x.Id).OrderBy(y => y.Descricao), "Id", "Descricao"));
                                @Html.DropDownListFor(m => m.FaccaoId, new SelectList(faccoes, "Value", "Text"), new { @class = "input-medium faccaoRelatorio", @style = "text-transform: uppercase" })
                            }
                        </div>
                    </td>
                    <td>
                        <p>
                            <input class="btn btn-@labelType" id="btn-buscar" type="submit" value="@labelButton" />
                        </p>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div style="width: 1130px;padding-right: 15px; padding-left: 15px; margin-right: auto; margin-left: 10px; ">
        @{
            if (Model.EntradaEstoque.Any())
            {
                Html.RenderPartial("_Relatorio", Model.EntradaEstoque);
            }
        }
    </div>
}